<?php
/**
 * Mainframe - Router Component
 *
 * A simple router component for Mainframe. Similar in many ways to
 * Symfony's router, although much simpler (as of now).
 *
 * @author Luke Visinoni <luke.visinoni@gmail.com>
 * @copyright (c) 2020 Luke Visinoni <luke.visinoni@gmail.com>
 */
namespace MainframeTest\Utils;

use Faker;
use PHPUnit\Framework\TestCase;

class MainframeTestCase extends TestCase
{
    protected Faker\Generator $faker;

    protected array $samples;

    public static function setUpBeforeClass(): void
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
    }

    protected function setUp(): void
    {
        parent::setUp();
        $f = $this->faker = Faker\Factory::create();
        $this->faker->seed(32417);

        $users = $this->createUser($f->randomDigitNotNull);

        $this->samples = [
            'users' => $users,
        ];
    }

    protected function createUser($num = null)
    {
        $f = $this->faker;

        $users = [];
        for ($i = 1; $i <= $num ?? 1; $i++) {
            $id = sprintf('%s-%s', $f->toUpper($f->unique()->bothify('#??###?')), $i);
            $users[$id] = [
                'username' => $f->unique()->userName,
                'password' => $f->password,
                'firstname' => $f->firstName,
                'lastname' => $f->lastName,
                'middle' => $f->toUpper($f->randomLetter),
                'description' => $f->sentence,
                'contacts' => $this->createContact($f->randomDigitNotNull),
                'last-login' => $f->dateTimeThisMonth,
                'created-at' => $f->dateTimeBetween('-4 years', '-1 month'),
                'ip' => $f->ipv4,
            ];

            if (null === $num) {
                return current($users);
            }
        }

        return $users;
    }

    protected function createContact($num = null)
    {
        $f = $this->faker;

        $contacts = [];
        for ($i = 1; $i <= $num ?? 1; $i++) {
            $id = sprintf('%s-%s', $f->unique()->randomNumber(5), $i);
            $contacts[$id] = [
                'id' => $id,
                'name' => $f->name,
                'email' => $f->unique()->companyEmail,
                'phone' => $f->phoneNumber,
                'phone2' => $f->optional(0.25, '')->phoneNumber,
                'address' => [
                    'line1' => $f->streetAddress,
                    'line2' => $f->optional(0.1, '')->secondaryAddress,
                    'city' => $f->city,
                    'state' => $f->stateAbbr,
                    'zip' => $f->postcode,
                ],
                'profile-image' => sprintf('/images/users/contacts/%s.%s', $id, $f->randomElement(['jpg', 'png', 'gif'])),
                'company' => $f->optional(0.2)->company,
                'homepage' => $f->url,
                'notes' => $f->optional(0.15)->paragraph,
                'hidden' => $f->boolean(85),
                'speeddial' => $f->boolean(10),
            ];

            if (null === $num) {
                return current($contacts);
            }
        }

        return $contacts;
    }

    public static function tearDownAfterClass(): void
    {
        parent::tearDownAfterClass(); // TODO: Change the autogenerated stub
    }

    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

}